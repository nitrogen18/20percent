[
  
    {

      "title"    : "Stuck at Unit Test via MVC",
      "url"      : "/posts/stuck-at-unit-test-on-bitrise",
      "content"  : "Hello, Good day! gonna share my thoughts about this Unit Test topic. I feel there's somethings wrong, so I look up and explore\nabout it. Looking back of what i'm pointing, I tried to do Unit Test since theres something benefits of creating\nthis test, it makes the code more reliable and bug free since we can do click Unit Test after doing some changes in codebase.\nBut then I have this struggle on how do I unit test my Modules which are UIViewControllers. I can't test them since some of my\nfunction and logics were tightly coupled. It means that in one function there were two or more business logic.\n\nUnit Test via testable import need a return function in order to test it but since my functions were already coupled, I need to\ndecompose/breaks them into a smaller pieces which I have my own trust issues. I feel there something strange bug will pop out\nelsewhere since I will move some of the business logic from my codebase. So what I did is UI Test, its an actual test on a simulator of physical device, It's somehow resembles in Selenium which automates the action on simulator. We can just click record and do some clicks on simulator, then XCode will provide the action code. That's the one of alternative of testing my codebase since I have this trust\nissues on breaking them down into smaller pieces/functions.\n\nMeanwhile, while reading some stuffs on the internet. I found this feedback which I relate of what he said.\n\n\n\nIn his case, he had this PhotoListViewController with a lot of business logic like converting date, start/stop activity indicator,\nshowing/hiding table view, also with a dependency API Service. He points out its too complicated since there were different kind of\npresentation logic in one file which resembles in my case(MVC), thats why the MVC is also called as Massive View Controller.\n\nBased on my readings there were good solution for this; is to implement a Software Architecture Pattern that implements Presentation/Domain Layer which all business process will be put in here. There are some of Software Architecture Pattern that implements it, the MVP and MVVC are widely know for this that has the Separation of Concern to other layer which gives benefit to implement an extensive Unit Test for every Data/UI component."

    },
  
    {

      "title"    : "Pod Install via No Internet",
      "url"      : "/posts/pod-install-via-no-internet",
      "content"  : "What will happen if we pod install without an internet?. By adding parameter --verbose we can check on what happens inside the pod command. In verbose log, pod checks the pod cache library first if the pod library exists; If not, then it will search the pod library on the internet.\n\nSteps:\n\n\n  Add --verbose to pod update\n  Look for pod cache library path and change on its directory bash command: cd *path\n\n\n\n\n\n\n\n  Print the availabe folders via ls\n\n\n\n\n\n  These are the pod library cache available for offline use. This pod cache exist because of our past pod install in other project.\n\n\nNote: If we have a lot of pod written in our Podfile and one of its pod didn't exist in our pod cache library. Then it will force to fetch via Internet, making the pod install fail."

    },
  
    {

      "title"    : "Update Realm Studio to Latest Version",
      "url"      : "/posts/update-realm-studio-to-latest-version",
      "content"  : "If you encounter this error, it seems that you have outdated Realm Studio like me. Maybe you download it somewhere specially from outdated guides via Internet. Similar case which I get a very low version Version 3.10.0. Prior to latest version of Realm Studio today, it jumps to Version 10.0.1 which is very far from my Version that I have.\n\nThis guide will help you to check or put the latest Realm Studio in your Mac.\n\n\nNote: My Realm Studio before, Version 3.10.0\n\nSteps:\n\n\n  Uninstall existing Realm Studio in your Mac. Simply navigate to Apple Icon &gt; About this Mac &gt; Storage &gt; Manage &gt; Applications &gt; *And look for Realm Studio\n  Click Delete. *If nothing happens, restart the Mac and do the first step first after booting.\n  Navigate to this Link: https://github.com/realm/realm-studio/releases and go to Release Section. You will see there the different version of Realm Studio.\n\n\n\n\n\n\n  After choosing the desire version, just click the link and look for .dmg file.\n  Download it and install, Done!\n\n\n\nNote: My Realm Studio after, Version 10.0.1"

    },
  
    {

      "title"    : "Firebase Uploading dSYM Manually",
      "url"      : "/posts/Firebase-Uploading-dSYM-Manually",
      "content"  : "I have this problem in my Production Scheme when someone user crashes their app and\nthe dSYM's were not uploaded in our Firebase. It seems that it needs a lot of work to do in order to upload the dYSM's.\nBased on the guide provided by Firebase, there are two ways to upload the dYSM's. First is to include script before build the iOS Projects and second is to do it manually. What I did is to do it manually by doing some minimal bash commands.\n\nThese are my mostly used BASH commands.\nls\nls -l\ncd *folder name\ncd ~\ncd ..\n\n\nFor the steps:\n\n  First, navigate to Appstore Connect and choose your app\n  Go to Activity Tab &gt; Latest Version &gt; Include Symbol &gt; download dSYM\n  Put it on Desktop for easy reference\n  Go here https://firebase.google.com/docs/crashlytics/get-deobfuscated-reports?platform=ios\n  Check Upload your dSYM Topic\n\n\nThese are the Placeholders\ndSYM_directory = the dSYM zip that you've downloaded in appstoreconnect\n$PODS_ROOT/FirebaseCrashlytics/upload-symbols = the firebase upload-symbols in the current project\n\n  You can get this by creating a script in Build Phases and add script \"echo $PODS_ROOT/FirebaseCrashlytics/upload-symbols\"\n  After building, navigate to Report Navigator in the left of xcode and click the first hammer icon. Scroll down at the bottom and you will find the current directory of $PODS_ROOT\n  /path/to/GoogleService-Info.plist = you can also get the path of this using the steps above\nplatform = ios\n\n\nNOTE: Login in firebase cli first before executing this script\n\n# BASH\nfirebase login\nfirebase projects:list # To check the projects, for verification\n\n\nFirst Script:\n\nfind dSYM_directory -name \"*.dSYM\" | xargs -I \\{\\} $PODS_ROOT/FirebaseCrashlytics/upload-symbols -gsp /path/to/GoogleService-Info.plist -p platform \\{\\}\n\n\nSecond Script:\n\n/path/to/pods/directory/FirebaseCrashlytics/upload-symbols -gsp /path/to/GoogleService-Info.plist -p ios /path/to/dSYMs\n\n\n\n\nI used second script and shows success on my Terminal but the Firebase still reflects the warning. Maybe it works or maybe not.\n\n\nPS: It works! If we manually upload the dSYM before this image below occurs, the error alert will still remain, but the following errors will not produce error alert anymore and the future errors it will be preceded and process by the Firebase/Crashlytics.\n\n\nBetter to have a script when we archive the project that automatically uploads the dSYM into Crashlytics. Possible solutions would be putting a script in Xcode after building the Production, or automate it via CI/CD Bitrise."

    },
  
    {

      "title"    : "Bring iPhone Simulator in Front",
      "url"      : "/posts/Bring-iPhone-Simulator-in-Front",
      "content"  : "When I do some build and run via Xcode, sometimes the Simulator stuck at the back of IDE and it needs to be click manually in order to show. In this script, it will bring the simulator in front every time we build and run our project. Very convenient for Simulator Users like me. 😉\n\nSteps: Xcode &gt; Project &gt; Build Phases &gt; Targets &gt; New Run\n\n\n\ntell application \"iPhone Simulator\"\nactivate\nend tell"

    },
  
    {

      "title"    : "Add Telegram Notification on Bitrise",
      "url"      : "/posts/Add-Telegram-Notification-on-Bitrise",
      "content"  : "If you're using Bitrise and you always use Telegram, this workflow step will help you a lot by sending Bitrise Status build to your Telegram Account. Think about a trigger when you push to specific branch and do a Bitrise task on it. You need to check again to Bitrise Web in order to see the result of that task.\n\nThis step adds a flavor in your Bitrise Workflow, and better to put it at the end of all of your steps. It will send notification to your Telegram after finishing the Bitrise Task.\n\nExample:\n\n  push to develop branch\n  Sit down or do some other task and wait for your phone to notify the build from Bitrise.\n\n\nSteps:\n\n  Choose any of your workflow to put the Telegram Notification to be included at the end of it.\n\n\n\n\n\n  Click the + button at the end and search for send telegram message.\n\n\n\n\nNote:\n\nThere are four required input variables in this telegram step which are;\n$TELEGRAM_BOT_TOKEN (SENSITIVE)\n$TELEGRAM_CHAT_ID (SENSITIVE)\n$DOWNLOAD_URL\n$CUSTOM_MESSAGE\n\nENV Details:\nTELEGRAM_BOT_TOKEN - Your Bot Token.\n\nTELEGRAM_CHAT_ID - Your Telegram Account Chat ID.\n\nDOWNLOAD_URL - Environment if you want to Download your archive.\n\nCUSTOM_MESSAGE - Depending on what you want to show in telegram bot.\n\n\n\n  After that, search for BotFather in Telegram search bar.\n  For $TELEGRAM_BOT_TOKEN , you can follow my convo with him.\n\n\n\n\n\n  For $TELEGRAM_CHAT_ID , search for @get_id_bot in Telegram search bar.\n    /start\n/my_id"

    },
  

  
    {

      "title"    : "Title",
      "url"      : "/notes/Title",
      "content"  : "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Consectetur libero id faucibus nisl tincidunt eget nullam. Ante in nibh mauris cursus mattis molestie a iaculis. Sit amet consectetur adipiscing elit ut. Ac tortor vitae purus faucibus ornare suspendisse sed nisi. Turpis massa tincidunt dui ut ornare lectus sit amet. Elit ullamcorper dignissim cras tincidunt lobortis feugiat. Elit at imperdiet dui accumsan sit amet nulla facilisi. Et ligula ullamcorper malesuada proin libero nunc consequat interdum varius. [[Side Message::rmn]] Id nibh tortor id aliquet lectus proin. Purus faucibus ornare suspendisse sed. Vivamus arcu felis bibendum ut tristique et. Nibh tortor id aliquet lectus. Non nisi est sit amet facilisis magna etiam. Maecenas pharetra convallis posuere morbi leo urna molestie. Mattis aliquam faucibus purus in. Enim sit amet venenatis urna cursus eget nunc scelerisque viverra. Porttitor eget dolor morbi non arcu risus. Posuere lorem ipsum dolor sit. Netus et malesuada fames ac turpis.  “Maecenas pharetra convallis posuere morbi leo urna molestie. Mattis aliquam faucibus purus in. Enim sit amet venenatis urna cursus eget nunc scelerisque viverra. Porttitor eget dolor morbi non arcu risus. Posuere lorem ipsum dolor sit. Netus et malesuada fames ac turpis.”.Maecenas pharetra convallis posuere morbi leo urna molestie. Mattis aliquam faucibus purus in. Enim sit amet venenatis urna cursus eget nunc scelerisque viverra. Porttitor eget dolor morbi non arcu risus. Posuere lorem ipsum dolor sit. Netus et malesuada fames ac turpis."

    }
  
]